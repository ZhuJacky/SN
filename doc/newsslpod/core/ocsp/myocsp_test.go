package ocsp

import (
	"context"
	"crypto/x509"
	"encoding/json"
	"encoding/pem"
	"testing"
)

var certs = []struct {
	Cert string
	CA   string
}{
	{`-----BEGIN CERTIFICATE-----
MIIE/TCCBIOgAwIBAgIQC1Hxq9P8JLw3l2erIA893jAKBggqhkjOPQQDAjBaMQsw
CQYDVQQGEwJDTjElMCMGA1UEChMcVHJ1c3RBc2lhIFRlY2hub2xvZ2llcywgSW5j
LjEkMCIGA1UEAxMbVHJ1c3RBc2lhIEVDQyBFViBUTFMgUHJvIENBMB4XDTE4MDYw
NjAwMDAwMFoXDTE5MDYxMTEyMDAwMFowgcUxHTAbBgNVBA8MFFByaXZhdGUgT3Jn
YW5pemF0aW9uMRMwEQYLKwYBBAGCNzwCAQMTAkNOMRswGQYDVQQFExI5MTMxMDEw
NDA2NjA0MzE5MzkxCzAJBgNVBAYTAkNOMRIwEAYDVQQHDAnkuIrmtbfluIIxMzAx
BgNVBAoMKuS6muaVsOS/oeaBr+enkeaKgO+8iOS4iua1t++8ieaciemZkOWFrOWP
uDEcMBoGA1UEAxMTZXZzc2wudHJ1c3Rhc2lhLmNvbTBZMBMGByqGSM49AgEGCCqG
SM49AwEHA0IABFMgmQ7k8VsSaIfyFngfjDfxZRYC44MbFyV2X6DJ3EgDhwkR+SW2
LVVhWM9ADegsGxp91zHN1VfTb1Kv6HAh14qjggK9MIICuTAfBgNVHSMEGDAWgBT/
FwTzA6I+lkDktTYm5wfrqfGZFzAdBgNVHQ4EFgQUwjxN4oUW507j9ZoEwGlyxMNQ
XQEwHgYDVR0RBBcwFYITZXZzc2wudHJ1c3Rhc2lhLmNvbTAOBgNVHQ8BAf8EBAMC
B4AwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMEYGA1UdHwQ/MD0wO6A5
oDeGNWh0dHA6Ly9jcmwuZGlnaWNlcnQtY24uY29tL1RydXN0QXNpYUVDQ0VWVExT
UHJvQ0EuY3JsMEsGA1UdIAREMEIwNwYJYIZIAYb9bAIBMCowKAYIKwYBBQUHAgEW
HGh0dHBzOi8vd3d3LmRpZ2ljZXJ0LmNvbS9DUFMwBwYFZ4EMAQEwfgYIKwYBBQUH
AQEEcjBwMCcGCCsGAQUFBzABhhtodHRwOi8vb2NzcC5kaWdpY2VydC1jbi5jb20w
RQYIKwYBBQUHMAKGOWh0dHA6Ly9jYWNlcnRzLmRpZ2ljZXJ0LWNuLmNvbS9UcnVz
dEFzaWFFQ0NFVlRMU1Byb0NBLmNydDAMBgNVHRMBAf8EAjAAMIIBAwYKKwYBBAHW
eQIEAgSB9ASB8QDvAHUAu9nfvB+KcbWTlCOXqpJ7RzhXlQqrUugakJZkNo4e0YUA
AAFj1bSUPQAABAMARjBEAiAHkBi5K2Sw1ZK433tjlvGl1hvd45c2NTlq+Yv6zfg1
wwIgRBl33gxZCH2u9uMHxvqV7SmROLrgw16JCzgyy3UPMSoAdgBWFAaaL9fC7NP1
4b1Esj7HRna5vJkRXMDvlJhV1onQ3QAAAWPVtJR8AAAEAwBHMEUCIBX9gDBQZSuD
6NJAGinz8JxqlmH3kb3Z4xB6YotSVqyZAiEA77H/Fk+nLEjGkBGk9aaZzT15PRf1
9Ioc2bd/m+k+jBEwCgYIKoZIzj0EAwIDaAAwZQIwbf0nbyljaNANeqN2xQpeOxfG
jPLNsb1iRixlLaxSvlB1r34CsBFl36fkBhc5YPkKAjEAg5kY5qC4UHf+ocfvTZoP
gjGQtsMsPzGZXmGgNtXQ7NdwOMQiU+nQlmH+1VgsuGEq
-----END CERTIFICATE-----`, `-----BEGIN CERTIFICATE-----
MIID8jCCAtqgAwIBAgIQAg5+swR+u9EqPlzmK+DZjTANBgkqhkiG9w0BAQwFADBs
MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
d3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5j
ZSBFViBSb290IENBMB4XDTE4MDQyNzEyNDMxMloXDTI4MDQyNzEyNDMxMlowWjEL
MAkGA1UEBhMCQ04xJTAjBgNVBAoTHFRydXN0QXNpYSBUZWNobm9sb2dpZXMsIElu
Yy4xJDAiBgNVBAMTG1RydXN0QXNpYSBFQ0MgRVYgVExTIFBybyBDQTB2MBAGByqG
SM49AgEGBSuBBAAiA2IABDBUoetY1B0PqJGvAm4ABeWV7gkgmZmIZ7+X1e5z+/wP
mfhuPhZYCyDuc531VEvjgx6OwE5RLW5zX/0Cij/TnrD+4tBZfkggdhkGGj30K/OT
dGQCvu5YNBALcgF0Or9Eb6OCAU4wggFKMB0GA1UdDgQWBBT/FwTzA6I+lkDktTYm
5wfrqfGZFzAfBgNVHSMEGDAWgBSxPsNpA/i/RwHUmCYaCALvY2QrwzAOBgNVHQ8B
Af8EBAMCAYYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBIGA1UdEwEB
/wQIMAYBAf8CAQAwNwYIKwYBBQUHAQEEKzApMCcGCCsGAQUFBzABhhtodHRwOi8v
b2NzcC5kaWdpY2VydC1jbi5jb20wTQYDVR0fBEYwRDBCoECgPoY8aHR0cDovL2Ny
bC5kaWdpY2VydC1jbi5jb20vRGlnaUNlcnRIaWdoQXNzdXJhbmNlRVZSb290Q0Eu
Y3JsMD0GA1UdIAQ2MDQwMgYEVR0gADAqMCgGCCsGAQUFBwIBFhxodHRwczovL3d3
dy5kaWdpY2VydC5jb20vQ1BTMA0GCSqGSIb3DQEBDAUAA4IBAQAlr3UbqMBq37fo
UQFTYLLWbFcLDBv/QTe/WJRRgF44vTY8iGFSn0Z5WQSDKONa8E7MAxkDXIBgt3OE
osTUSnnvIs3sfm8m2E4hc7azJclZT5oa5GU/Jw7m5dZ9kBJrozZNfOZ5uAE68RgA
3NhYN+cuC8SpchaLXiXW9/cc/4urIrSSrYAX4UIM+I+4Bwc2bJ6h1Cfbur+8TodG
PcMMdT4RB3Hy4DPo6UX5h7GxwltrDOLA3e+oMQgHj9P6HWPucwf7O3u8RZGuzMVX
VGg55EUmYkg2JF5S0Asa9pRw4cqOouHYT/R26UEMbTgSoDsMTPqcdgRPSrzP1EQU
k1qXXwno
-----END CERTIFICATE-----`},
}

func TestGetOCSPdata(t *testing.T) {
	for _, v := range certs {
		cb, _ := pem.Decode([]byte(v.Cert))
		cert, _ := x509.ParseCertificate(cb.Bytes)
		cab, _ := pem.Decode([]byte(v.CA))
		ca, _ := x509.ParseCertificate(cab.Bytes)

		buf := GetOCSPdata(context.Background(), cert, ca)

		resp, err := ParseResponse(*buf, ca)
		if err != nil {
			t.Log(err)
			continue
		}
		b, _ := json.Marshal(resp)
		t.Logf("%+v", string(b))

	}
}
