// Code generated by protoc-gen-go.
// source: polaris_metric.proto
// DO NOT EDIT!

/*
Package metric is a generated protocol buffer package.

It is generated from these files:
	polaris_metric.proto
	polaris_metric_api.proto
	polaris_ratelimit.proto

It has these top-level messages:
	MetricDimension
	MetricKey
	MetricInitRequest
	MetricQueryRequest
	MetricRequest
	MetricResponse
	RateLimitRequest
	RateLimitResponse
	Limiter
*/
package metric

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 统计类型
type MetricType int32

const (
	// 请求数
	MetricType_ReqCount MetricType = 0
	// 被限流数
	MetricType_LimitCount MetricType = 1
	// 按时延来进行上报
	MetricType_ReqCountByDelay MetricType = 2
	// 通用错误数
	MetricType_ErrorCount MetricType = 3
	// 通过错误类型来统计上报
	MetricType_ErrorCountByType MetricType = 4
)

var MetricType_name = map[int32]string{
	0: "ReqCount",
	1: "LimitCount",
	2: "ReqCountByDelay",
	3: "ErrorCount",
	4: "ErrorCountByType",
}
var MetricType_value = map[string]int32{
	"ReqCount":         0,
	"LimitCount":       1,
	"ReqCountByDelay":  2,
	"ErrorCount":       3,
	"ErrorCountByType": 4,
}

func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}
func (MetricType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 当前上报的角色类型，主调或者被调
type MetricKey_Role int32

const (
	// 主调
	MetricKey_Caller MetricKey_Role = 0
	// 被调
	MetricKey_Callee MetricKey_Role = 1
)

var MetricKey_Role_name = map[int32]string{
	0: "Caller",
	1: "Callee",
}
var MetricKey_Role_value = map[string]int32{
	"Caller": 0,
	"Callee": 1,
}

func (x MetricKey_Role) String() string {
	return proto.EnumName(MetricKey_Role_name, int32(x))
}
func (MetricKey_Role) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// 统计维度
// 这里直接使用基础类型可以避免转换过程
type MetricDimension struct {
	// 维度类型
	Type MetricType `protobuf:"varint,1,opt,name=type,enum=metric.MetricType" json:"type,omitempty"`
	// 维度的具体值，比如具体错误类型
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MetricDimension) Reset()                    { *m = MetricDimension{} }
func (m *MetricDimension) String() string            { return proto.CompactTextString(m) }
func (*MetricDimension) ProtoMessage()               {}
func (*MetricDimension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MetricDimension) GetType() MetricType {
	if m != nil {
		return m.Type
	}
	return MetricType_ReqCount
}

func (m *MetricDimension) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// 统计标识，用于唯一关联一种类型的统计滑窗
// 这里直接使用基础类型可以避免转换过程
type MetricKey struct {
	// 服务名
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	// 命名空间
	Namespace string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	// 服务子集群，格式为key1:value1|key2:value2
	// 如果要查询服务下面所有的subSet信息，subset字段可以填*
	Subset string `protobuf:"bytes,3,opt,name=subset" json:"subset,omitempty"`
	// 业务标签信息，格式为key1:value1|key2:value2
	// 如果要查询服务下面所有的labels信息，labels字段可以填*
	Labels string         `protobuf:"bytes,4,opt,name=labels" json:"labels,omitempty"`
	Role   MetricKey_Role `protobuf:"varint,5,opt,name=role,enum=metric.MetricKey_Role" json:"role,omitempty"`
}

func (m *MetricKey) Reset()                    { *m = MetricKey{} }
func (m *MetricKey) String() string            { return proto.CompactTextString(m) }
func (*MetricKey) ProtoMessage()               {}
func (*MetricKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MetricKey) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *MetricKey) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *MetricKey) GetSubset() string {
	if m != nil {
		return m.Subset
	}
	return ""
}

func (m *MetricKey) GetLabels() string {
	if m != nil {
		return m.Labels
	}
	return ""
}

func (m *MetricKey) GetRole() MetricKey_Role {
	if m != nil {
		return m.Role
	}
	return MetricKey_Caller
}

// 统计初始化请求
type MetricInitRequest struct {
	// 消息ID，用于和应答相对应
	MsgId *google_protobuf.Int64Value `protobuf:"bytes,1,opt,name=msgId" json:"msgId,omitempty"`
	// 标识
	Key *MetricKey `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	// 统计类型
	Dimensions []*MetricDimension                `protobuf:"bytes,3,rep,name=dimensions" json:"dimensions,omitempty"`
	Windows    []*MetricInitRequest_MetricWindow `protobuf:"bytes,4,rep,name=windows" json:"windows,omitempty"`
}

func (m *MetricInitRequest) Reset()                    { *m = MetricInitRequest{} }
func (m *MetricInitRequest) String() string            { return proto.CompactTextString(m) }
func (*MetricInitRequest) ProtoMessage()               {}
func (*MetricInitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MetricInitRequest) GetMsgId() *google_protobuf.Int64Value {
	if m != nil {
		return m.MsgId
	}
	return nil
}

func (m *MetricInitRequest) GetKey() *MetricKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MetricInitRequest) GetDimensions() []*MetricDimension {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func (m *MetricInitRequest) GetWindows() []*MetricInitRequest_MetricWindow {
	if m != nil {
		return m.Windows
	}
	return nil
}

// 统计滑窗
type MetricInitRequest_MetricWindow struct {
	// 滑窗统计周期，单位ms
	Duration int64 `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	// 滑窗统计精度
	Precision uint32 `protobuf:"varint,2,opt,name=precision" json:"precision,omitempty"`
}

func (m *MetricInitRequest_MetricWindow) Reset()         { *m = MetricInitRequest_MetricWindow{} }
func (m *MetricInitRequest_MetricWindow) String() string { return proto.CompactTextString(m) }
func (*MetricInitRequest_MetricWindow) ProtoMessage()    {}
func (*MetricInitRequest_MetricWindow) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

func (m *MetricInitRequest_MetricWindow) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MetricInitRequest_MetricWindow) GetPrecision() uint32 {
	if m != nil {
		return m.Precision
	}
	return 0
}

// 统计查询请求
type MetricQueryRequest struct {
	// 消息ID，用于和应答相对应
	MsgId *google_protobuf.Int64Value `protobuf:"bytes,1,opt,name=msgId" json:"msgId,omitempty"`
	// 标识
	Key *MetricKey `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	// 统计类型
	Dimensions []*MetricDimension `protobuf:"bytes,3,rep,name=dimensions" json:"dimensions,omitempty"`
	// 查询周期，单位ms
	// 该查询周期必须不大于初始化时候给的window信息，按最近的一个精度滑窗向上取整
	Duration int64 `protobuf:"varint,4,opt,name=duration" json:"duration,omitempty"`
}

func (m *MetricQueryRequest) Reset()                    { *m = MetricQueryRequest{} }
func (m *MetricQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*MetricQueryRequest) ProtoMessage()               {}
func (*MetricQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MetricQueryRequest) GetMsgId() *google_protobuf.Int64Value {
	if m != nil {
		return m.MsgId
	}
	return nil
}

func (m *MetricQueryRequest) GetKey() *MetricKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MetricQueryRequest) GetDimensions() []*MetricDimension {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func (m *MetricQueryRequest) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// 周期统计上报请求
type MetricRequest struct {
	// 消息ID，用于和应答相对应
	MsgId *google_protobuf.Int64Value `protobuf:"bytes,1,opt,name=msgId" json:"msgId,omitempty"`
	// 标识
	Key        *MetricKey                       `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Increments []*MetricRequest_MetricIncrement `protobuf:"bytes,3,rep,name=increments" json:"increments,omitempty"`
	// 上报数据最后发生的时间（统计server绝对时间），单位unixnano
	Timestamp *google_protobuf.Int64Value `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *MetricRequest) Reset()                    { *m = MetricRequest{} }
func (m *MetricRequest) String() string            { return proto.CompactTextString(m) }
func (*MetricRequest) ProtoMessage()               {}
func (*MetricRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MetricRequest) GetMsgId() *google_protobuf.Int64Value {
	if m != nil {
		return m.MsgId
	}
	return nil
}

func (m *MetricRequest) GetKey() *MetricKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MetricRequest) GetIncrements() []*MetricRequest_MetricIncrement {
	if m != nil {
		return m.Increments
	}
	return nil
}

func (m *MetricRequest) GetTimestamp() *google_protobuf.Int64Value {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// 上报的数据
// 可一次同时上报多种类型的统计数据
type MetricRequest_MetricIncrement struct {
	// 滑窗统计周期，单位ms
	Duration int64                                   `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	Values   []*MetricRequest_MetricIncrement_Values `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
	// 滑窗统计精度
	Precision uint32 `protobuf:"varint,3,opt,name=precision" json:"precision,omitempty"`
}

func (m *MetricRequest_MetricIncrement) Reset()         { *m = MetricRequest_MetricIncrement{} }
func (m *MetricRequest_MetricIncrement) String() string { return proto.CompactTextString(m) }
func (*MetricRequest_MetricIncrement) ProtoMessage()    {}
func (*MetricRequest_MetricIncrement) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0}
}

func (m *MetricRequest_MetricIncrement) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MetricRequest_MetricIncrement) GetValues() []*MetricRequest_MetricIncrement_Values {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *MetricRequest_MetricIncrement) GetPrecision() uint32 {
	if m != nil {
		return m.Precision
	}
	return 0
}

// 单次上报的统计数据
type MetricRequest_MetricIncrement_Values struct {
	// 统计类型
	Dimension *MetricDimension `protobuf:"bytes,1,opt,name=dimension" json:"dimension,omitempty"`
	// 上报的统计值，按步长为最小单位，包含2次上报之间的增量数据
	// 下标越小，则数据是越近
	Values []int64 `protobuf:"varint,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *MetricRequest_MetricIncrement_Values) Reset()         { *m = MetricRequest_MetricIncrement_Values{} }
func (m *MetricRequest_MetricIncrement_Values) String() string { return proto.CompactTextString(m) }
func (*MetricRequest_MetricIncrement_Values) ProtoMessage()    {}
func (*MetricRequest_MetricIncrement_Values) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0, 0}
}

func (m *MetricRequest_MetricIncrement_Values) GetDimension() *MetricDimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *MetricRequest_MetricIncrement_Values) GetValues() []int64 {
	if m != nil {
		return m.Values
	}
	return nil
}

// 统计应答
type MetricResponse struct {
	// 返回码
	Code *google_protobuf.UInt32Value `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	// 返回码详情
	Info *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	// 消息ID，用于和应答相对应
	MsgId     *google_protobuf.Int64Value `protobuf:"bytes,3,opt,name=msgId" json:"msgId,omitempty"`
	Summaries []*MetricResponse_MetricSum `protobuf:"bytes,4,rep,name=summaries" json:"summaries,omitempty"`
	// 统计server绝对时间，单位unixnano
	Timestamp *google_protobuf.Int64Value `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *MetricResponse) Reset()                    { *m = MetricResponse{} }
func (m *MetricResponse) String() string            { return proto.CompactTextString(m) }
func (*MetricResponse) ProtoMessage()               {}
func (*MetricResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MetricResponse) GetCode() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *MetricResponse) GetInfo() *google_protobuf.StringValue {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MetricResponse) GetMsgId() *google_protobuf.Int64Value {
	if m != nil {
		return m.MsgId
	}
	return nil
}

func (m *MetricResponse) GetSummaries() []*MetricResponse_MetricSum {
	if m != nil {
		return m.Summaries
	}
	return nil
}

func (m *MetricResponse) GetTimestamp() *google_protobuf.Int64Value {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// 统计滑窗汇总值
type MetricResponse_MetricSum struct {
	// 滑窗统计周期，单位ms
	Duration int64                             `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	Values   []*MetricResponse_MetricSum_Value `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (m *MetricResponse_MetricSum) Reset()                    { *m = MetricResponse_MetricSum{} }
func (m *MetricResponse_MetricSum) String() string            { return proto.CompactTextString(m) }
func (*MetricResponse_MetricSum) ProtoMessage()               {}
func (*MetricResponse_MetricSum) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

func (m *MetricResponse_MetricSum) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MetricResponse_MetricSum) GetValues() []*MetricResponse_MetricSum_Value {
	if m != nil {
		return m.Values
	}
	return nil
}

// 单次上报的统计数据
// 一次可以同时上报多种类型的统计数据
type MetricResponse_MetricSum_Value struct {
	// 统计类型
	Dimension *MetricDimension `protobuf:"bytes,1,opt,name=dimension" json:"dimension,omitempty"`
	// 上报的统计值，按步长为最小单位，包含2次上报之间的增量数据
	Value int64 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *MetricResponse_MetricSum_Value) Reset()         { *m = MetricResponse_MetricSum_Value{} }
func (m *MetricResponse_MetricSum_Value) String() string { return proto.CompactTextString(m) }
func (*MetricResponse_MetricSum_Value) ProtoMessage()    {}
func (*MetricResponse_MetricSum_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0, 0}
}

func (m *MetricResponse_MetricSum_Value) GetDimension() *MetricDimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *MetricResponse_MetricSum_Value) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*MetricDimension)(nil), "metric.MetricDimension")
	proto.RegisterType((*MetricKey)(nil), "metric.MetricKey")
	proto.RegisterType((*MetricInitRequest)(nil), "metric.MetricInitRequest")
	proto.RegisterType((*MetricInitRequest_MetricWindow)(nil), "metric.MetricInitRequest.MetricWindow")
	proto.RegisterType((*MetricQueryRequest)(nil), "metric.MetricQueryRequest")
	proto.RegisterType((*MetricRequest)(nil), "metric.MetricRequest")
	proto.RegisterType((*MetricRequest_MetricIncrement)(nil), "metric.MetricRequest.MetricIncrement")
	proto.RegisterType((*MetricRequest_MetricIncrement_Values)(nil), "metric.MetricRequest.MetricIncrement.Values")
	proto.RegisterType((*MetricResponse)(nil), "metric.MetricResponse")
	proto.RegisterType((*MetricResponse_MetricSum)(nil), "metric.MetricResponse.MetricSum")
	proto.RegisterType((*MetricResponse_MetricSum_Value)(nil), "metric.MetricResponse.MetricSum.Value")
	proto.RegisterEnum("metric.MetricType", MetricType_name, MetricType_value)
	proto.RegisterEnum("metric.MetricKey_Role", MetricKey_Role_name, MetricKey_Role_value)
}

func init() { proto.RegisterFile("polaris_metric.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 700 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0xe3, 0x24, 0x6d, 0xa6, 0xb7, 0x74, 0xa9, 0x8a, 0x15, 0xaa, 0x2a, 0x0a, 0xa2, 0xaa,
	0x2a, 0xe4, 0x42, 0xca, 0x45, 0xbc, 0x54, 0xa8, 0x17, 0x89, 0xa8, 0x20, 0xc4, 0xb6, 0xd0, 0x47,
	0xe4, 0x24, 0xd3, 0x68, 0x85, 0xed, 0x75, 0x77, 0xd7, 0xad, 0xfc, 0x57, 0xfc, 0x00, 0x42, 0xfc,
	0x04, 0x1f, 0xc0, 0x23, 0x5f, 0x81, 0xbc, 0x6b, 0xc7, 0x71, 0x2b, 0xda, 0x82, 0x84, 0xc4, 0x5b,
	0x66, 0xf6, 0x9c, 0xf1, 0x99, 0x33, 0xb3, 0x59, 0x58, 0x8e, 0xb8, 0xef, 0x09, 0x26, 0x3f, 0x06,
	0xa8, 0x04, 0x1b, 0xb8, 0x91, 0xe0, 0x8a, 0x93, 0xba, 0x89, 0x5a, 0x6b, 0x23, 0xce, 0x47, 0x3e,
	0x6e, 0xe9, 0x6c, 0x3f, 0x3e, 0xdd, 0xba, 0x10, 0x5e, 0x14, 0xa1, 0x90, 0x06, 0xd7, 0x79, 0x0b,
	0x8b, 0x6f, 0x34, 0x72, 0x9f, 0x05, 0x18, 0x4a, 0xc6, 0x43, 0xb2, 0x0e, 0x55, 0x95, 0x44, 0xe8,
	0x58, 0x6d, 0x6b, 0x63, 0xa1, 0x4b, 0xdc, 0xac, 0xae, 0x81, 0x1d, 0x27, 0x11, 0x52, 0x7d, 0x4e,
	0x96, 0xa1, 0x76, 0xee, 0xf9, 0x31, 0x3a, 0x95, 0xb6, 0xb5, 0xd1, 0xa0, 0x26, 0xe8, 0x7c, 0xb5,
	0xa0, 0x61, 0xa0, 0x87, 0x98, 0x10, 0x07, 0xa6, 0x25, 0x8a, 0x73, 0x36, 0x30, 0xe5, 0x1a, 0x34,
	0x0f, 0xc9, 0x2a, 0x34, 0x42, 0x2f, 0x40, 0x19, 0x79, 0x83, 0xbc, 0x42, 0x91, 0x20, 0x2b, 0x50,
	0x97, 0x71, 0x5f, 0xa2, 0x72, 0x6c, 0x7d, 0x94, 0x45, 0x69, 0xde, 0xf7, 0xfa, 0xe8, 0x4b, 0xa7,
	0x6a, 0xf2, 0x26, 0x22, 0x9b, 0x50, 0x15, 0xdc, 0x47, 0xa7, 0xa6, 0x35, 0xaf, 0x94, 0x35, 0x1f,
	0x62, 0xe2, 0x52, 0xee, 0x23, 0xd5, 0x98, 0xce, 0x1a, 0x54, 0xd3, 0x88, 0x00, 0xd4, 0xf7, 0x3c,
	0xdf, 0x47, 0xd1, 0x9c, 0x1a, 0xff, 0xc6, 0xa6, 0xd5, 0xf9, 0x5c, 0x81, 0x25, 0x43, 0xec, 0x85,
	0x4c, 0x51, 0x3c, 0x8b, 0x51, 0x2a, 0xf2, 0x18, 0x6a, 0x81, 0x1c, 0xf5, 0x86, 0xba, 0x8f, 0xd9,
	0xee, 0x3d, 0xd7, 0x18, 0xeb, 0xe6, 0xc6, 0xba, 0xbd, 0x50, 0x3d, 0x7b, 0xf2, 0x21, 0xf5, 0x80,
	0x1a, 0x24, 0xb9, 0x0f, 0xf6, 0x27, 0x4c, 0x74, 0x73, 0xb3, 0xdd, 0xa5, 0x2b, 0x9a, 0x68, 0x7a,
	0x4a, 0x9e, 0x03, 0x0c, 0x73, 0xeb, 0xa5, 0x63, 0xb7, 0xed, 0x8d, 0xd9, 0xee, 0xdd, 0x32, 0x76,
	0x3c, 0x1a, 0x3a, 0x01, 0x25, 0x2f, 0x61, 0xfa, 0x82, 0x85, 0x43, 0x7e, 0x91, 0x7a, 0x91, 0xb2,
	0xd6, 0xcb, 0xac, 0x09, 0xf1, 0x59, 0xe6, 0x44, 0xc3, 0x69, 0x4e, 0x6b, 0xbd, 0x82, 0xb9, 0xc9,
	0x03, 0xd2, 0x82, 0x99, 0x61, 0x2c, 0x3c, 0xc5, 0x78, 0xa8, 0xbb, 0xb4, 0xe9, 0x38, 0x4e, 0xc7,
	0x15, 0x09, 0x1c, 0xb0, 0xf4, 0xdb, 0xba, 0xa3, 0x79, 0x5a, 0x24, 0x3a, 0xdf, 0x2c, 0x20, 0xa6,
	0xd4, 0xbb, 0x18, 0x45, 0xf2, 0xdf, 0x7a, 0x36, 0xd9, 0x61, 0xb5, 0xdc, 0x61, 0xe7, 0xbb, 0x0d,
	0xf3, 0x86, 0xfb, 0xaf, 0xe5, 0x1f, 0x00, 0xb0, 0x70, 0x20, 0x30, 0xc0, 0x50, 0xe5, 0xf2, 0x1f,
	0x94, 0xb1, 0xe5, 0xc1, 0xf5, 0x72, 0x34, 0x9d, 0x20, 0x92, 0x17, 0xd0, 0x50, 0x2c, 0x40, 0xa9,
	0xbc, 0x20, 0xd2, 0xdd, 0xdc, 0x20, 0xb1, 0x40, 0xb7, 0x7e, 0x5a, 0xf9, 0xb5, 0x1f, 0x97, 0xbe,
	0x76, 0xfa, 0xfb, 0x50, 0xd7, 0xb7, 0x5b, 0x3a, 0x15, 0xad, 0xf6, 0xe1, 0xad, 0xd4, 0xba, 0xfa,
	0xbb, 0x92, 0x66, 0xdc, 0xf2, 0x0e, 0xd9, 0x97, 0x76, 0xa8, 0x75, 0x02, 0x75, 0x83, 0x27, 0x4f,
	0xa1, 0x31, 0x9e, 0x59, 0xe6, 0xfd, 0x6f, 0xa7, 0x5b, 0x20, 0xd3, 0xff, 0x86, 0x09, 0x91, 0x76,
	0xfe, 0xd9, 0xce, 0x0f, 0x1b, 0x16, 0x72, 0x9d, 0x32, 0xe2, 0xa1, 0x44, 0xf2, 0x08, 0xaa, 0x03,
	0x3e, 0xc4, 0xac, 0xf8, 0xea, 0x15, 0xd7, 0xde, 0xf7, 0x42, 0xb5, 0xdd, 0x35, 0xb6, 0x69, 0x64,
	0xca, 0x60, 0xe1, 0x29, 0xcf, 0x26, 0x7b, 0x95, 0x71, 0xa4, 0x04, 0x0b, 0x47, 0x19, 0x23, 0x45,
	0x16, 0xdb, 0x63, 0xdf, 0x7a, 0x7b, 0x76, 0xa0, 0x21, 0xe3, 0x20, 0xf0, 0x04, 0xc3, 0xfc, 0x52,
	0xb7, 0x2f, 0x3b, 0x6d, 0x3a, 0xc8, 0xc2, 0xa3, 0x38, 0xa0, 0x05, 0xa5, 0xbc, 0x11, 0xb5, 0x3f,
	0xda, 0x88, 0x2f, 0xe3, 0xbf, 0xed, 0xa3, 0x38, 0xb8, 0x76, 0x17, 0x76, 0x2e, 0xed, 0xc2, 0xfa,
	0x4d, 0x0a, 0xcd, 0x1a, 0xe4, 0xe3, 0x68, 0x1d, 0x43, 0x4d, 0x27, 0xfe, 0x76, 0xcc, 0xa5, 0x67,
	0xc7, 0xce, 0x9e, 0x9d, 0x4d, 0x04, 0x28, 0x1e, 0x28, 0x32, 0x07, 0x33, 0x14, 0xcf, 0xf6, 0x78,
	0x1c, 0xaa, 0xe6, 0x14, 0x59, 0x00, 0x78, 0xcd, 0x02, 0xa6, 0x4c, 0x6c, 0x91, 0x3b, 0xb0, 0x98,
	0x9f, 0xee, 0x26, 0xfb, 0xe8, 0x7b, 0x49, 0xb3, 0x92, 0x82, 0x0e, 0x84, 0xe0, 0xc2, 0x80, 0x6c,
	0xb2, 0x0c, 0xcd, 0x22, 0xde, 0x4d, 0xd2, 0xb2, 0xcd, 0x6a, 0xbf, 0xae, 0x6d, 0xdc, 0xfe, 0x15,
	0x00, 0x00, 0xff, 0xff, 0xbb, 0xbb, 0x9c, 0x03, 0x75, 0x07, 0x00, 0x00,
}
