// Code generated by protoc-gen-go.
// source: polaris_model.proto
// DO NOT EDIT!

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MatchString_MatchStringType int32

const (
	MatchString_EXACT MatchString_MatchStringType = 0
	MatchString_REGEX MatchString_MatchStringType = 1
)

var MatchString_MatchStringType_name = map[int32]string{
	0: "EXACT",
	1: "REGEX",
}
var MatchString_MatchStringType_value = map[string]int32{
	"EXACT": 0,
	"REGEX": 1,
}

func (x MatchString_MatchStringType) String() string {
	return proto.EnumName(MatchString_MatchStringType_name, int32(x))
}
func (MatchString_MatchStringType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{1, 0}
}

type Location struct {
	Region *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Zone   *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=zone" json:"zone,omitempty"`
	Campus *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=campus" json:"campus,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Location) GetRegion() *google_protobuf.StringValue {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *Location) GetZone() *google_protobuf.StringValue {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *Location) GetCampus() *google_protobuf.StringValue {
	if m != nil {
		return m.Campus
	}
	return nil
}

type MatchString struct {
	Type  MatchString_MatchStringType  `protobuf:"varint,1,opt,name=type,enum=v1.MatchString_MatchStringType" json:"type,omitempty"`
	Value *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MatchString) Reset()                    { *m = MatchString{} }
func (m *MatchString) String() string            { return proto.CompactTextString(m) }
func (*MatchString) ProtoMessage()               {}
func (*MatchString) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *MatchString) GetType() MatchString_MatchStringType {
	if m != nil {
		return m.Type
	}
	return MatchString_EXACT
}

func (m *MatchString) GetValue() *google_protobuf.StringValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Location)(nil), "v1.Location")
	proto.RegisterType((*MatchString)(nil), "v1.MatchString")
	proto.RegisterEnum("v1.MatchString_MatchStringType", MatchString_MatchStringType_name, MatchString_MatchStringType_value)
}

func init() { proto.RegisterFile("polaris_model.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0xc8, 0xcf, 0x49,
	0x2c, 0xca, 0x2c, 0x8e, 0xcf, 0xcd, 0x4f, 0x49, 0xcd, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x2a, 0x33, 0x94, 0x92, 0x4b, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x24, 0x95,
	0xa6, 0xe9, 0x97, 0x17, 0x25, 0x16, 0x14, 0xa4, 0x16, 0x15, 0x43, 0xd4, 0x28, 0xad, 0x60, 0xe4,
	0xe2, 0xf0, 0xc9, 0x4f, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0x13, 0x32, 0xe1, 0x62, 0x2b, 0x4a, 0x4d,
	0xcf, 0xcc, 0xcf, 0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x36, 0x92, 0xd1, 0x83, 0xe8, 0xd6, 0x83,
	0xe9, 0xd6, 0x0b, 0x2e, 0x29, 0xca, 0xcc, 0x4b, 0x0f, 0x4b, 0xcc, 0x29, 0x4d, 0x0d, 0x82, 0xaa,
	0x15, 0x32, 0xe0, 0x62, 0xa9, 0xca, 0xcf, 0x4b, 0x95, 0x60, 0x22, 0x42, 0x0f, 0x58, 0x25, 0xc8,
	0x9e, 0xe4, 0xc4, 0xdc, 0x82, 0xd2, 0x62, 0x09, 0x66, 0x62, 0xec, 0x81, 0xa8, 0x55, 0x9a, 0xcf,
	0xc8, 0xc5, 0xed, 0x9b, 0x58, 0x92, 0x9c, 0x01, 0x91, 0x14, 0x32, 0xe6, 0x62, 0x29, 0xa9, 0x2c,
	0x48, 0x05, 0xbb, 0x95, 0xcf, 0x48, 0x5e, 0xaf, 0xcc, 0x50, 0x0f, 0x49, 0x1a, 0x99, 0x1d, 0x52,
	0x59, 0x90, 0x1a, 0x04, 0x56, 0x2c, 0x64, 0xc4, 0xc5, 0x5a, 0x06, 0x32, 0x95, 0x28, 0xd7, 0x42,
	0x94, 0x2a, 0xa9, 0x73, 0xf1, 0xa3, 0x19, 0x26, 0xc4, 0xc9, 0xc5, 0xea, 0x1a, 0xe1, 0xe8, 0x1c,
	0x22, 0xc0, 0x00, 0x62, 0x06, 0xb9, 0xba, 0xbb, 0x46, 0x08, 0x30, 0x26, 0xb1, 0x81, 0x4d, 0x31,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x74, 0xd2, 0x19, 0x8e, 0x01, 0x00, 0x00,
}
